# char_check = re.sub(r'[ \n]', '_', 'a b c\n')

what does replace(to_replace) mean?
# df.replace(to_replace=[r"\\t|\\n|\\r", "\t|\n|\r"], value=["",""], regex=True, inplace=True)


 # df = series.to_frame
            # df = df.replace('\n','', regex=True)
            # [pandas] replace newlines,tabs,carriage returns in fields 
            # df = df.replace(r'\r+|\n+|\t+|\s+','', regex=True)
            # series = series.str.replace(r'[\n\s]+$', '', regex=True) 



# movies_df['GENRE'].unique()
# movies_df['GENRE'].value_counts()
# movies_df['GENRE'].nunique()



To get the array with the indices with nan values in your column, use:

nan_indices = df.index[df['your_column'].isna()]
To drop, say, the first 20%, use:

df.drop(nan_indices[:int(len(nan_indices) * 0.2)])


Note: The regex \W is used to find all non-word characters, i.e. characters which are not alphabetical or numerical.
https://stackoverflow.com/questions/44117326/how-can-i-remove-all-non-numeric-characters-from-all-the-values-in-a-particular


https://stackoverflow.com/questions/9589074/regex-should-hyphens-be-escaped


https://www.threesl.com/blog/special-characters-regular-expressions-escape/


https://stackoverflow.com/questions/49551336/pandas-trim-leading-trailing-white-space-in-a-dataframe


palette_color = sns.color_palette('bright')
# plotting data on chart
g_data =empl_att_df['JobSatisfaction'].value_counts()
g_data.plot.pie(autopct="%.1f%%")

# displaying chart
plt.show()


sns.barplot(data=jobs_salary_filter, x='JobRole', y='MonthlyIncome', palette=['#C7EDE4', '#A9EFDE', '#D5FFF3','AF9AB2', 'A477A8', '99539E', '820B8A', '751B6C', '672A4E' ])